{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/frontend/src/components/Breadcrumb.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Route, MemoryRouter } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nconst breadcrumbNameMap = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts'\n};\n\nfunction ListItemLink(props) {\n  const {\n    to,\n    open,\n    ...other\n  } = props;\n  const primary = breadcrumbNameMap[to];\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      component: RouterLink,\n      to: to,\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), open != null ? open ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 49\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ListItemLink;\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 360\n  },\n  lists: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(1)\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nconst LinkRouter = props => /*#__PURE__*/_jsxDEV(Link, { ...props,\n  component: RouterLink\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 48\n}, this);\n\n_c2 = LinkRouter;\nexport default function RouterBreadcrumbs() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MemoryRouter, {\n    initialEntries: ['/inbox'],\n    initialIndex: 0,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        children: ({\n          location\n        }) => {\n          const pathnames = location.pathname.split('/').filter(x => x);\n          return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            \"aria-label\": \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(LinkRouter, {\n              color: \"inherit\",\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), pathnames.map((value, index) => {\n              const last = index === pathnames.length - 1;\n              const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n              return last ? /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                children: breadcrumbNameMap[to]\n              }, to, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(LinkRouter, {\n                color: \"inherit\",\n                to: to,\n                children: breadcrumbNameMap[to]\n              }, to, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RouterBreadcrumbs, \"ZbauVcu/I6GQoZvFWe0/Vd1mXmg=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = RouterBreadcrumbs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListItemLink\");\n$RefreshReg$(_c2, \"LinkRouter\");\n$RefreshReg$(_c3, \"RouterBreadcrumbs\");","map":{"version":3,"sources":["/workspace/frontend/src/components/Breadcrumb.tsx"],"names":["React","makeStyles","createStyles","Link","ListItem","ListItemText","Typography","ExpandLess","ExpandMore","Breadcrumbs","Route","MemoryRouter","RouterLink","breadcrumbNameMap","ListItemLink","props","to","open","other","primary","useStyles","theme","root","display","flexDirection","width","lists","backgroundColor","palette","background","paper","marginTop","spacing","nested","paddingLeft","LinkRouter","RouterBreadcrumbs","classes","setOpen","useState","handleClick","prevOpen","location","pathnames","pathname","split","filter","x","map","value","index","last","length","slice","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Link, { LinkProps } from '@material-ui/core/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Route, MemoryRouter } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Omit } from '@material-ui/types';\n\ninterface ListItemLinkProps extends LinkProps {\n  to: string;\n  open?: boolean;\n}\n\nconst breadcrumbNameMap: { [key: string]: string } = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts',\n};\n\nfunction ListItemLink(props: Omit<ListItemLinkProps, 'ref'>) {\n  const { to, open, ...other } = props;\n  const primary = breadcrumbNameMap[to];\n\n  return (\n    <li>\n      <ListItem button component={RouterLink} to={to} {...other}>\n        <ListItemText primary={primary} />\n        {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}\n      </ListItem>\n    </li>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: 360,\n    },\n    lists: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(1),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }),\n);\n\ninterface LinkRouterProps extends LinkProps {\n  to: string;\n  replace?: boolean;\n}\n\nconst LinkRouter = (props: LinkRouterProps) => <Link {...props} component={RouterLink as any} />;\n\nexport default function RouterBreadcrumbs() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <div className={classes.root}>\n        <Route>\n          {({ location }) => {\n            const pathnames = location.pathname.split('/').filter((x) => x);\n\n            return (\n              <Breadcrumbs aria-label=\"breadcrumb\">\n                <LinkRouter color=\"inherit\" to=\"/\">\n                  Home\n                </LinkRouter>\n                {pathnames.map((value, index) => {\n                  const last = index === pathnames.length - 1;\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                  return last ? (\n                    <Typography color=\"textPrimary\" key={to}>\n                      {breadcrumbNameMap[to]}\n                    </Typography>\n                  ) : (\n                    <LinkRouter color=\"inherit\" to={to} key={to}>\n                      {breadcrumbNameMap[to]}\n                    </LinkRouter>\n                  );\n                })}\n              </Breadcrumbs>\n            );\n          }}\n        </Route>\n       \n      </div>\n    </MemoryRouter>\n  );\n}"]},"metadata":{},"sourceType":"module"}