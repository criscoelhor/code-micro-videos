{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/frontend/src/components/Breadcrumb.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Route } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nconst breadcrumbNameMap = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts'\n};\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 360\n  },\n  lists: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(1)\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nconst LinkRouter = props => /*#__PURE__*/_jsxDEV(Link, { ...props,\n  component: RouterLink\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 48\n}, this);\n\n_c = LinkRouter;\nexport default function RouterBreadcrumbs() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: ({\n        location\n      }) => {\n        const pathnames = location.pathname.split('/').filter(x => x);\n        return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          \"aria-label\": \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(LinkRouter, {\n            color: \"inherit\",\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), pathnames.map((value, index) => {\n            const last = index === pathnames.length - 1;\n            const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n            return last ? /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              children: breadcrumbNameMap[to]\n            }, to, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(LinkRouter, {\n              color: \"inherit\",\n              to: to,\n              children: breadcrumbNameMap[to]\n            }, to, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RouterBreadcrumbs, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = RouterBreadcrumbs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkRouter\");\n$RefreshReg$(_c2, \"RouterBreadcrumbs\");","map":{"version":3,"sources":["/workspace/frontend/src/components/Breadcrumb.tsx"],"names":["React","makeStyles","createStyles","Link","Typography","Breadcrumbs","Route","RouterLink","breadcrumbNameMap","useStyles","theme","root","display","flexDirection","width","lists","backgroundColor","palette","background","paper","marginTop","spacing","nested","paddingLeft","LinkRouter","props","RouterBreadcrumbs","classes","location","pathnames","pathname","split","filter","x","map","value","index","last","length","to","slice","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,IAAP,MAAgC,wBAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASH,IAAI,IAAII,UAAjB,QAAmC,kBAAnC;AAOA,MAAMC,iBAA4C,GAAG;AACnD,YAAU,OADyC;AAEnD,sBAAoB,WAF+B;AAGnD,YAAU,OAHyC;AAInD,WAAS,MAJ0C;AAKnD,aAAW;AALwC,CAArD;AAQA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,IAC3BR,YAAY,CAAC;AACXS,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,KAAK,EAAE;AAHH,GADK;AAMXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KADrC;AAELC,IAAAA,SAAS,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AAFN,GANI;AAUXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEb,KAAK,CAACW,OAAN,CAAc,CAAd;AADP;AAVG,CAAD,CADc,CAA5B;;AAsBA,MAAMG,UAAU,GAAIC,KAAD,iBAA4B,QAAC,IAAD,OAAUA,KAAV;AAAiB,EAAA,SAAS,EAAElB;AAA5B;AAAA;AAAA;AAAA;AAAA,QAA/C;;KAAMiB,U;AAEN,eAAe,SAASE,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,sBACI;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA,2BACE,QAAC,KAAD;AAAA,gBAEI,CAAC;AAAEiB,QAAAA;AAAF,OAAD,KAAkB;AACd,cAAMC,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,CAAqCC,CAAD,IAAOA,CAA3C,CAAlB;AAEA,4BACA,QAAC,WAAD;AAAa,wBAAW,YAAxB;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,EAAE,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKJ,SAAS,CAACK,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,kBAAMC,IAAI,GAAGD,KAAK,KAAKP,SAAS,CAACS,MAAV,GAAmB,CAA1C;AACA,kBAAMC,EAAE,GAAI,IAAGV,SAAS,CAACW,KAAV,CAAgB,CAAhB,EAAmBJ,KAAK,GAAG,CAA3B,EAA8BK,IAA9B,CAAmC,GAAnC,CAAwC,EAAvD;AAEA,mBAAOJ,IAAI,gBACP,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,aAAlB;AAAA,wBACC7B,iBAAiB,CAAC+B,EAAD;AADlB,eAAqCA,EAArC;AAAA;AAAA;AAAA;AAAA,oBADO,gBAKP,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,SAAlB;AAA4B,cAAA,EAAE,EAAEA,EAAhC;AAAA,wBACC/B,iBAAiB,CAAC+B,EAAD;AADlB,eAAyCA,EAAzC;AAAA;AAAA;AAAA;AAAA,oBALJ;AASH,WAbA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAqBL;AA1BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCD;;GAlCuBb,iB;UACNjB,S;;;MADMiB,iB","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Link, { LinkProps } from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Route } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface ListItemLinkProps extends LinkProps {\n  to: string;\n  open?: boolean;\n}\n\nconst breadcrumbNameMap: { [key: string]: string } = {\n  '/inbox': 'Inbox',\n  '/inbox/important': 'Important',\n  '/trash': 'Trash',\n  '/spam': 'Spam',\n  '/drafts': 'Drafts',\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: 360,\n    },\n    lists: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(1),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }),\n);\n\ninterface LinkRouterProps extends LinkProps {\n  to: string;\n  replace?: boolean;\n}\n\nconst LinkRouter = (props: LinkRouterProps) => <Link {...props} component={RouterLink as any} />;\n\nexport default function RouterBreadcrumbs() {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Route>\n          {\n            ({ location }) => {\n                const pathnames = location.pathname.split('/').filter((x) => x);\n\n                return (\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <LinkRouter color=\"inherit\" to=\"/\">\n                        Home\n                    </LinkRouter>\n                    {pathnames.map((value, index) => {\n                        const last = index === pathnames.length - 1;\n                        const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                        return last ? (\n                            <Typography color=\"textPrimary\" key={to}>\n                            {breadcrumbNameMap[to]}\n                            </Typography>\n                        ) : (\n                            <LinkRouter color=\"inherit\" to={to} key={to}>\n                            {breadcrumbNameMap[to]}\n                            </LinkRouter>\n                        );\n                    })}\n                </Breadcrumbs>\n                );\n          }}\n        </Route>  \n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}